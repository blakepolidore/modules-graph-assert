plugins {
  id "com.gradle.plugin-publish" version "1.2.1"
  id "java-gradle-plugin"
  id "com.vanniktech.maven.publish" version "0.14.2"
  id "maven-publish"
}

apply plugin: 'kotlin'

repositories {
  mavenCentral()
}

dependencies {
  implementation gradleApi()
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

  testImplementation 'junit:junit:4.13.2'
}

compileKotlin {
  kotlinOptions {
    jvmTarget = "11"
  }
}
compileTestKotlin {
  kotlinOptions {
    jvmTarget = "11"
  }
}

group = 'com.jraska.module.graph.assertion'

gradlePlugin {
  website = 'https://github.com/blakepolidore/modules-graph-assert'
  vcsUrl = 'https://github.com/blakepolidore/modules-graph-assert'

  plugins {
    modulesGraphAssert {
      id = 'com.blakepolidore.module.graph.assertion'
      version = '2.5.0'
      displayName = 'Modules Graph Assert'
      description = 'Gradle plugin to keep your modules graph healthy and lean.'
      implementationClass = 'com.blakepolidore.module.graph.assertion.ModuleGraphAssertionsPlugin'
      tags.addAll('graph', 'assert', 'build speed', 'android', 'java', 'kotlin', 'quality', 'multiprojects', 'module')
    }
  }
}

// Find the first non-null Gradle property or environment variable
// corresponding to the given names, giving preference to Gradle properties.
String propOrEnv(String... names) {
  // hasProperty, getProperty don't work when called directly in a closure;
  // they need a receiver that knows about properties, like rootProject.
  def p = rootProject
  def result = names.findResult { p.hasProperty(it) ? p.getProperty(it) : System.getenv(it) }
  if (result == null) {
    logger.error("Missing gradle property or environment variable: $names")
  }
  return result
}

plugins.withId("com.vanniktech.maven.publish") {
  mavenPublish {
    releaseSigningEnabled = false
    targets {
      // Modify the existing uploadArchives task
      uploadArchives {
        releaseRepositoryUrl = propOrEnv("ARTIFACTORY_URL", "instacart_artifactory_url")
        snapshotRepositoryUrl = propOrEnv("ARTIFACTORY_URL", "instacart_artifactory_url")
        repositoryUsername = propOrEnv("ARTIFACTORY_USERNAME", "instacart_artifactory_username")
        repositoryPassword = propOrEnv("ARTIFACTORY_PASSWORD", "instacart_artifactory_password")
      }
    }
  }
}
